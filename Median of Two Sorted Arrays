Description:
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
 

Constraints:

nums1.length == m
nums2.length == n
0 <= m <= 1000
0 <= n <= 1000
1 <= m + n <= 2000
-106 <= nums1[i], nums2[i] <= 106

PYTHON 3:
class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        num3 = sorted(nums1 + nums2)
        n = len(num3)
        median = 0
        if n % 2 == 0 :
            index1 = n // 2 - 1
            index2 = n // 2
            ele1 = num3[index1]
            ele2 = num3[index2]
            median = (ele1 + ele2)/2
        else:
            index3 = n // 2
            ele3 = num3[index3]
            median = ele3
        return median

        
