Description:
Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

 

Example 1:


Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
Example 2:

Input: n = 1
Output: [[1]]


python3:
class Solution:
    def generateMatrix(self, n: int):
        # Initialize an empty n x n matrix
        matrix = [[0] * n for _ in range(n)]
        
        # Initialize variables
        top, bottom, left, right = 0, n - 1, 0, n - 1
        num = 1  # Start filling from 1
        
        # Fill the matrix in a spiral order
        while top <= bottom and left <= right:
            # Traverse from left to right along the top row
            for i in range(left, right + 1):
                matrix[top][i] = num
                num += 1
            top += 1
            
            # Traverse from top to bottom along the right column
            for i in range(top, bottom + 1):
                matrix[i][right] = num
                num += 1
            right -= 1
            
            # Traverse from right to left along the bottom row (if not crossed)
            if top <= bottom:
                for i in range(right, left - 1, -1):
                    matrix[bottom][i] = num
                    num += 1
                bottom -= 1
            
            # Traverse from bottom to top along the left column (if not crossed)
            if left <= right:
                for i in range(bottom, top - 1, -1):
                    matrix[i][left] = num
                    num += 1
                left += 1
        
        return matrix
